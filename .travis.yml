language: cpp
os: linux
sudo: required
compiler: gcc
dist: focal

services:
  - docker

branches:
  only: 
    - master
    - linux
    - buildtest

matrix:
  fast_finish: true
  include:
    - name: Ubuntu 20.04 build
      env:
      - DOCKER_FILE=docker/docker_ubuntu2004_cuda11
      - PKG_TYPE=deb

    - name: Ubuntu 18.04 build
      env:
      - DOCKER_FILE=docker/docker_ubuntu1804_cuda10
      - PKG_TYPE=deb

    - name: Fedora 32 build
      env:
      - DOCKER_FILE=docker/docker_fedora32_cuda11
      - PKG_TYPE=rpm

before_install:
  - git clone https://github.com/AviSynth/AviSynthPlus.git AviSynthPlus
  - git clone https://github.com/vapoursynth/vapoursynth.git vapoursynth
  - DOCKER_IMAGE=build_pkg_image
  - cp ${DOCKER_FILE} Dockerfile
  - docker image build -t ${DOCKER_IMAGE} .
  - OUTPUT_DIR=`pwd`/../output
  - mkdir ${OUTPUT_DIR}

script:
  - docker run -dit --rm -v ${OUTPUT_DIR}:/output --name build_pkg ${DOCKER_IMAGE}
  - docker exec build_pkg ./configure --extra-cxxflags="-I./AviSynthPlus/avs_core/include -I./vapoursynth/include"
  - docker exec build_pkg make -j2
  - docker exec build_pkg ./nvencc --version
  - docker exec build_pkg ./check_options.py
  - docker exec build_pkg ./build_${PKG_TYPE}.sh
  - docker exec build_pkg sh -c 'cp ./*.${PKG_TYPE} /output'

deploy:
  provider: releases
  api_key: IDRwZWN1uQaTxb64SQnTDNJR5KPtCFPL3Mln9GrdZ7TSiyec/o1KXpOuh/50ZO5A
  file:
    - ${OUTPUT_DIR}/*
  skip_cleanup: true
  on:
    branch: release
    tags: true
